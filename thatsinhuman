#!/usr/bin/env ruby

require 'open-uri'
require 'nokogiri'

site_page = "http://www.thatsinhuman.com/"
rss_file = ENV['HOME'] + "/public_html/vitorgalvao/rss/thatsinhuman.rss"

# get new comic
page = Nokogiri::HTML(open(site_page))

comic_title = page.css('span.rss-title').text.strip
comic_link = page.css('select option')[1].attr('value')
comic_image = page.css('span.rss-content img').attr('src').value
comic_description = page.css('p').to_html

# create new feed (if it doesn't exist)
# or prepare existing one (checking if retried item is new)
if !File.file?(rss_file)
  tmp_feed = Nokogiri::XML::Builder.new do |xml|
    xml.rss("version" => "2.0") {
      xml.channel {
        xml.title "That's Inhuman"
        xml.link site_page
        xml.description "A webcomic by Ty Halley"
      }
    }
  end
  rss_feed = Nokogiri::XML(tmp_feed.to_xml)
else
  rss_feed = Nokogiri::XML(File.open(rss_file))

  # abort if most recent item link is the same as the newly retrieved one
  # else save the most recent for later, and continue
  most_recent_item_link = rss_feed.at('item').at('link').content
  if (most_recent_item_link == comic_link)
    abort 'There are no new items to add'
  else
    recent_items = rss_feed.css('item')[0..9] # save recent items
    rss_feed.css('item').remove # removes all items
  end
end

# add new item to feed
Nokogiri::XML::Builder.with(rss_feed.at('channel')) do |xml|
  xml.item {
    xml.title comic_title
    xml.link comic_link
    xml.description "<img src='#{comic_image}'>#{comic_description}"
  }
end

# add previously grabbed items (if any) and save
rss_feed.at('channel').add_child(recent_items) unless recent_items.nil?

File.open(rss_file, "w") do |f|
  f.puts rss_feed.to_xml
end
